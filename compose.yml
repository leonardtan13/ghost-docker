services:
  mysql8:
    image: docker.io/mysql:8.4
    environment:
      MYSQL_DATABASE: ghost
      MYSQL_USER: ghost
      MYSQL_PASSWORD_FILE: /run/secrets/mysql_app_pw
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_pw
      MYSQL_MULTIPLE_DATABASES: activitypub
    secrets:
      - mysql_root_pw
      - mysql_app_pw
    volumes:
      - ghost_mysql:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d:ro
    networks: [web-net]
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "mysqladmin ping -uroot -p$$(cat /run/secrets/mysql_root_pw) || exit 1",
        ]
      interval: 10s
      timeout: 5s
      retries: 12
    expose:
      - "3306"

  ghost:
    image: docker.io/ghost:alpine
    expose:
      - "2368"
    depends_on:
      mysql8:
        condition: service_healthy
      tinybird-sync:
        condition: service_completed_successfully
        required: false
      tinybird-deploy:
        condition: service_completed_successfully
        required: false
      activitypub:
        condition: service_started
        required: false

    environment:
      url: https://blog.leonardtgm.com
      NODE_ENV: production
      database__client: mysql
      database__connection__host: mysql8
      database__connection__user: ghost
      database__connection__password: ${MYSQL_APP_PASSWORD}
      database__connection__database: ghost
      tinybird__tracker__endpoint: https://blog.leonardtgm.com/.ghost/analytics/api/v1/page_hit
      tinybird__adminToken: ${TINYBIRD_ADMIN_TOKEN:-}
      tinybird__workspaceId: ${TINYBIRD_WORKSPACE_ID:-}
      tinybird__tracker__datasource: analytics_events
      tinybird__stats__endpoint: ${TINYBIRD_API_URL:-https://api.tinybird.co}
    volumes:
      - ghost_content:/var/lib/ghost/content
    networks: [web-net]
    restart: unless-stopped

  cloudflared:
    image: docker.io/cloudflare/cloudflared:latest
    depends_on:
      ghost:
        condition: service_started
    command: ["tunnel", "run", "--token", "${CLOUDFLARE_TUNNEL_TOKEN}"]
    networks: [web-net]
    restart: unless-stopped

  traffic-analytics:
    image: docker.io/ghost/traffic-analytics:1.0.18@sha256:e460800c17f34bec50cd943b9264c74cfcd7e922a62ea73267be920be8f258c0
    expose:
      - "3000"
    volumes:
      - traffic_analytics_data:/data
    environment:
      NODE_ENV: production
      PROXY_TARGET: ${TINYBIRD_API_URL:-https://api.tinybird.co}/v0/events
      SALT_STORE_TYPE: ${SALT_STORE_TYPE:-file}
      SALT_STORE_FILE_PATH: /data/salts.json
      TINYBIRD_TRACKER_TOKEN: ${TINYBIRD_TRACKER_TOKEN:-}
      LOG_LEVEL: debug
    profiles: [analytics]
    networks: [web-net]
    restart: unless-stopped

  activitypub:
    image: ghcr.io/tryghost/activitypub:1.1.0@sha256:39c212fe23603b182d68e67d555c6b9b04b1e57459dfc0bef26d6e4980eb04d1
    expose:
      - "8080"
    volumes:
      - ghost_content:/opt/activitypub/content
    environment:
      NODE_ENV: production
      MYSQL_HOST: mysql8
      MYSQL_USER: ghost
      MYSQL_PASSWORD: ${MYSQL_APP_PASSWORD}
      MYSQL_DATABASE: activitypub
      LOCAL_STORAGE_PATH: /opt/activitypub/content/images/activitypub
      LOCAL_STORAGE_HOSTING_URL: https://blog.leonardtgm.com/content/images/activitypub
    depends_on:
      mysql8:
        condition: service_healthy
      activitypub-migrate:
        condition: service_completed_successfully
    profiles: [activitypub]
    networks: [web-net]
    restart: unless-stopped

  activitypub-migrate:
    image: ghcr.io/tryghost/activitypub-migrations:1.1.0@sha256:b3ab20f55d66eb79090130ff91b57fe93f8a4254b446c2c7fa4507535f503662
    environment:
      MYSQL_DB: mysql://ghost:${MYSQL_APP_PASSWORD}@tcp(mysql8:3306)/activitypub
    networks: [web-net]
    depends_on:
      mysql8:
        condition: service_healthy
    profiles: [activitypub]
    restart: no

  tinybird-login:
    build:
      context: ./tinybird
      dockerfile: Dockerfile
    working_dir: /home/tinybird
    command: /usr/local/bin/tinybird-login
    volumes:
      - tinybird_home:/home/tinybird
      - tinybird_files:/data/tinybird
    profiles: [analytics]
    networks: [web-net]
    tty: false
    restart: no

  tinybird-sync:
    image: docker.io/ghost:alpine
    command: >
      sh -c "
        if [ -d /var/lib/ghost/current/core/server/data/tinybird ]; then
          rm -rf /data/tinybird/*;
          cp -rf /var/lib/ghost/current/core/server/data/tinybird/* /data/tinybird/;
          echo 'Tinybird files synced into shared volume.';
        else
          echo 'Tinybird source directory not found.';
        fi
      "
    volumes:
      - tinybird_files:/data/tinybird
    depends_on:
      tinybird-login:
        condition: service_completed_successfully
    networks:
      - web-net
    profiles: [analytics]
    restart: no

  tinybird-deploy:
    build:
      context: ./tinybird
      dockerfile: Dockerfile
    working_dir: /data/tinybird
    command: >
      sh -c "
        tb-wrapper --cloud deploy
      "
    volumes:
      - tinybird_home:/home/tinybird
      - tinybird_files:/data/tinybird
    depends_on:
      tinybird-sync:
        condition: service_completed_successfully
    profiles: [analytics]
    networks:
      - web-net
    tty: true
    restart: no

volumes:
  ghost_content:
  ghost_mysql:
  tinybird_files:
  tinybird_home:
  traffic_analytics_data:

secrets:
  mysql_root_pw:
    file: ./secrets/mysql_root_pw.txt
  mysql_app_pw:
    file: ./secrets/mysql_app_pw.txt

networks:
  web-net:
    external: true
